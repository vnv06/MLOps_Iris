name: CI - Dev Branch
on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: dev
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup DVC
      uses: iterative/setup-dvc@v1
      
    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure GCP credentials for DVC
      run: |
        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
    
    - name: Pull data and model from DVC
      run: |
        dvc pull data/ artifacts/model.joblib
    
    - name: Run tests with pytest
      run: |
        pytest tests/ -v --cov=.

    - name: Create CML report
      uses: iterative/setup-cml@v2
      with:
        file: report.md
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sanity-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: dev
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Setup DVC
      uses: iterative/setup-dvc@v1
    
    - name: Pull data and model from DVC
      run: |
        dvc pull data/ artifacts/model.joblib
    
    - name: Run sanity test
      id: sanity
      run: |
        echo "## Sanity Test Results" > report.md
        echo "### Model Load Test" >> report.md
        python -c "
        import joblib
        try:
            model = joblib.load('artifacts/model.joblib')
            print('✅ Model loaded successfully')
            print('Model type:', type(model))
            print('✅ Sanity test passed')
            echo '::set-output name=status::success'
        except Exception as e:
            print('❌ Model loading failed:', str(e))
            echo '::set-output name=status::failed'
            exit(1)
        " >> report.md
    
    - name: Create CML report
      uses: iterative/setup-cml@v2
      with:
        file: report.md
      env:
        REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}